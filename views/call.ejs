<!DOCTYPE html>
<html lang="ar">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ÿàÿßÿ¨Ÿáÿ© ÿßÿ™ÿµÿßŸÑ ŸÅŸäÿØŸäŸà</title>
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
        }
        .container {
            text-align: center;
        }
        .video-call-container {
            display: flex;
            flex-direction: column;
            width: 90%;
            max-width: 800px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
            overflow: hidden;
            margin: 20px auto;
        }
        .video {
            height: 400px;
            position: relative;
            background: #000;
        }
        .local-video, .remote-video {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
        }
        .local-video {
            border: 2px solid white;
            border-radius: 10px;
            width: 150px;
            height: 200px;
            right: 10px;
            bottom: 10px;
            z-index: 2;
        }
        .remote-video {
            width: 100%;
            height: 100%;
            z-index: 1;
        }
        .controls {
            display: flex;
            justify-content: space-around;
            padding: 15px;
            background-color: #f8f8f8;
            border-top: 1px solid #ddd;
        }
        .button {
            width: 60px;
            height: 60px;
            border: none;
            border-radius: 50%;
            cursor: pointer;
            transition: background 0.3s;
            color: white;
            font-size: 24px;
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        }
        #mute-button {
            background-color: #007bff;
        }
        #end-call-button {
            background-color: #dc3545;
        }
        #video-button {
            background-color: #28a745;
        }
        .button:hover {
            opacity: 0.8;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="video-call-container" id="video-call-container">
            <div class="video">
                <video class="remote-video" id="remote-video" autoplay muted></video>
                <video class="local-video" id="local-video" autoplay></video>
            </div>
            <div class="controls">
                <button class="button" id="mute-button">üîá</button>
                <button class="button" id="end-call-button">üö´</button>
                <button class="button" id="video-button">üì∑</button>
            </div>
        </div>
    </div>

    <script src="https://unpkg.com/peerjs@1.5.4/dist/peerjs.min.js"></script>
    <script>
        const localVideo = document.getElementById('local-video');
        const remoteVideo = document.getElementById('remote-video');
        const videoCallContainer = document.getElementById('video-call-container');

        const muteButton = document.getElementById('mute-button');
        const endCallButton = document.getElementById('end-call-button');
        const videoButton = document.getElementById('video-button');

        let myid = sessionStorage.getItem('MYpeerId');
        let friendid = sessionStorage.getItem('FRpeerId');
        console.log(myid);
        console.log(friendid);

        let localStream;
        let isMuted = false;
        let isVideoStopped = false;

        const peer = new Peer(myid);

        // ÿßŸÑÿ≠ÿµŸàŸÑ ÿπŸÑŸâ Ÿàÿ≥ÿßÿ¶ÿ∑ ÿßŸÑŸÖÿ≥ÿ™ÿÆÿØŸÖ
        navigator.mediaDevices.getUserMedia({ video: true, audio: true })
            .then(stream => {
                localVideo.srcObject = stream;
                localStream = stream;

                const call = peer.call(friendid, stream);
                call.on('stream', remoteStream => {
                    remoteVideo.srcObject = remoteStream;
                });
            })
            .catch(err => {
                console.error('Error accessing media devices.', err);
            });

        peer.on('call', call => {
            navigator.mediaDevices.getUserMedia({ video: true, audio: true })
                .then(stream => {
                    localVideo.srcObject = stream;
                    call.answer(stream);
                    call.on('stream', remoteStream => {
                        remoteVideo.srcObject = remoteStream;
                    });
                })
                .catch(err => {
                    console.error('Error accessing media devices.', err);
                });
        });

        muteButton.addEventListener('click', () => {
            isMuted = !isMuted;
            localStream.getAudioTracks()[0].enabled = !isMuted;
            muteButton.innerHTML = isMuted ? "üîä" : "üîá";
        });

        endCallButton.addEventListener('click', () => {
           sessionStorage.removeItem('MYpeerId');
           sessionStorage.removeItem('FRpeerId);
  });
